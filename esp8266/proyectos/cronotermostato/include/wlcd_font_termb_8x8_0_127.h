/*
 * Created by Martin Winkelhofer 03,11,12/2016
 * W-Dimension / wdim / wdim0 / winkelhofer.m@gmail.com / https://github.com/wdim0
 *    __   ________          ______   _______  ___________    __  ______   _______  ____ ___  ___ 
 *   / /  / ___/ _ \  ____  /  _/ /  /  _/ _ \|_  / / <  /  _/_/ /  _/ /  /  _/ _ \/ / /( _ )( _ )
 *  / /__/ /__/ // / /___/ _/ // /___/ / \_, //_ <_  _/ / _/_/  _/ // /___/ / \_, /_  _/ _  / _  |
 * /____/\___/____/       /___/____/___//___/____//_//_/ /_/   /___/____/___//___/ /_/ \___/\___/ 
 *
 * Driver for LCD controllers ILI9341 / ILI9488 (or compatible) using 4-wire SPI interface
 * hooked to ESP8266's HSPI interface (or using SW bit-banging for any GPIOs).
 * v1.50 (12/2016), RTOS version
 *
 * This file is part of WLCD - W-Dimension's LCD driver for ESP8266.
 *
 * WLCD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * WLCD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with WLCD. If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef __WLCD_FONT_TERMB_8X8_0_127_H__
#define __WLCD_FONT_TERMB_8X8_0_127_H__

#include <espressif/c_types.h>

/* ============================================================================
 * FONT: "Term", 8x8, bold, chars 0..127
 * ============================================================================
 *
 * fonter.c used to create content of CharOffs[], Rects[] arrays. Thanks!
 *
 * uint16_t CharOffs[] - offsets to array Rects[]
 *
 * Example for char with ASCII value 65 - "A":
 * CharOffs[65] = 0x0170
 * CharOffs[66] = 0x0177
 * => for drawing of char "A" we'll use 7 rectangles, first rectangle is here -> Rects[0x0170]
 *
 * uint16_t Rects[] - each 16-bit value describes one rectangle:
 * 0 b 0000 0000 0000 0000
 *       H    W    Y    X
 * note: add 1 to W, H to get real width, height.
 */

#define WLCD_FONT_TERMB_8X8_0_127_CHAR_WIDTH			8
#define WLCD_FONT_TERMB_8X8_0_127_CHAR_HEIGHT			8
#define WLCD_FONT_TERMB_8X8_0_127_FIRST_CHAR_CODE		0
#define WLCD_FONT_TERMB_8X8_0_127_LAST_CHAR_CODE		127

const uint16_t wlcd_font_termb_8x8_0_127_Rects[] = {
	0x0501, 0x5010, 0x5017, 0x0571, 0x0342, 0x1143, 0x0022, 0x0025, 0x1501, 0x1561, 0x5110, 0x5116, 0x3103, 0x0530, 0x0250, 0x0055, 
	0x2610, 0x4212, 0x4101, 0x4104, 0x5013, 0x4212, 0x2421, 0x6003, 0x0630, 0x4202, 0x1630, 0x7003, 0x0411, 0x2130, 0x2135, 0x0272, 
	0x2431, 0x7003, 0x0222, 0x0640, 0x0272, 0x3123, 0x1332, 0x1700, 0x1760, 0x5100, 0x5106, 0x2200, 0x2005, 0x0250, 0x0055, 0x0312, 
	0x3021, 0x3026, 0x0362, 0x1012, 0x1015, 0x0151, 0x0055, 0x0700, 0x3123, 0x0770, 0x6000, 0x6007, 0x1332, 0x1100, 0x1006, 0x0160, 
	0x0066, 0x4124, 0x2205, 0x2140, 0x0371, 0x0231, 0x0004, 0x3007, 0x3143, 0x2111, 0x2115, 0x0302, 0x0561, 0x0342, 0x6102, 0x2106, 
	0x1260, 0x0302, 0x0322, 0x0051, 0x6101, 0x5106, 0x0401, 0x0421, 0x1155, 0x1160, 0x2103, 0x1230, 0x1235, 0x2153, 0x0110, 0x0116, 
	0x0322, 0x0352, 0x0160, 0x0166, 0x4210, 0x2420, 0x6000, 0x0630, 0x4214, 0x2122, 0x6006, 0x0130, 0x7103, 0x1312, 0x0551, 0x0521, 
	0x1352, 0x4101, 0x4105, 0x0161, 0x0165, 0x6103, 0x6106, 0x3001, 0x0401, 0x1010, 0x0131, 0x5002, 0x5024, 0x0402, 0x0271, 0x0116, 
	0x1031, 0x1134, 0x0160, 0x0011, 0x0122, 0x0152, 0x0164, 0x2541, 0x7103, 0x0770, 0x1312, 0x0541, 0x0521, 0x1342, 0x6103, 0x1312, 
	0x0521, 0x6103, 0x0541, 0x1342, 0x0630, 0x4014, 0x2124, 0x0013, 0x0053, 0x0630, 0x4012, 0x2021, 0x0112, 0x0152, 0x3120, 0x0650, 
	0x0730, 0x4012, 0x4015, 0x2021, 0x2125, 0x2531, 0x1113, 0x1740, 0x0322, 0x2511, 0x1710, 0x3312, 0x4113, 0x4102, 0x1311, 0x0162, 
	0x2101, 0x2104, 0x6101, 0x6104, 0x0620, 0x0640, 0x0411, 0x0450, 0x0331, 0x0102, 0x0120, 0x0144, 0x1152, 0x1110, 0x1155, 0x0115, 
	0x0124, 0x0133, 0x0142, 0x0151, 0x0160, 0x3002, 0x3031, 0x3035, 0x2004, 0x2023, 0x1040, 0x1044, 0x0261, 0x0102, 0x0011, 0x0114, 
	0x0135, 0x0165, 0x1101, 0x0120, 0x2121, 0x0103, 0x0112, 0x0152, 0x0163, 0x2123, 0x0101, 0x0112, 0x0152, 0x0161, 0x2322, 0x0730, 
	0x0111, 0x0115, 0x0151, 0x0155, 0x4112, 0x0530, 0x1152, 0x0171, 0x0530, 0x1152, 0x0105, 0x0114, 0x0123, 0x0132, 0x0141, 0x0150, 
	0x1050, 0x4110, 0x4115, 0x0401, 0x0461, 0x1024, 0x1033, 0x1240, 0x6102, 0x0560, 0x0011, 0x0560, 0x0301, 0x1114, 0x0232, 0x0110, 
	0x0141, 0x0150, 0x0154, 0x6004, 0x0201, 0x0261, 0x0110, 0x1114, 0x0132, 0x1144, 0x0150, 0x6104, 0x0640, 0x1003, 0x1012, 0x1021, 
	0x0363, 0x0030, 0x0500, 0x2134, 0x0420, 0x0361, 0x1100, 0x0150, 0x3120, 0x3034, 0x0202, 0x0261, 0x0111, 0x0330, 0x1144, 0x0500, 
	0x2142, 0x2104, 0x1100, 0x0133, 0x6001, 0x6004, 0x0201, 0x1010, 0x1114, 0x0231, 0x1040, 0x1144, 0x0261, 0x3114, 0x0301, 0x1110, 
	0x0231, 0x0261, 0x0153, 0x1112, 0x1152, 0x1112, 0x1152, 0x0171, 0x2021, 0x0103, 0x0112, 0x1042, 0x1053, 0x1012, 0x0030, 0x0163, 
	0x0520, 0x0550, 0x2024, 0x0101, 0x0112, 0x1043, 0x1052, 0x1013, 0x0134, 0x0061, 0x0301, 0x1114, 0x0110, 0x0133, 0x0142, 0x0162, 
	0x2323, 0x4110, 0x0401, 0x0361, 0x0115, 0x4120, 0x4124, 0x1102, 0x0311, 0x0340, 0x6101, 0x6005, 0x0400, 0x0460, 0x1115, 0x0331, 
	0x1145, 0x2120, 0x0302, 0x0362, 0x0111, 0x0115, 0x0151, 0x0155, 0x6101, 0x2125, 0x0400, 0x0460, 0x0114, 0x0154, 0x6101, 0x0600, 
	0x0660, 0x2024, 0x1006, 0x0231, 0x0056, 0x6101, 0x0600, 0x2024, 0x0360, 0x1006, 0x0231, 0x2120, 0x2145, 0x0302, 0x0262, 0x0111, 
	0x0115, 0x0151, 0x0044, 0x6100, 0x6104, 0x0330, 0x6102, 0x0301, 0x0361, 0x5104, 0x1140, 0x0361, 0x0303, 0x6101, 0x1105, 0x1155, 
	0x2024, 0x0000, 0x2005, 0x0231, 0x0144, 0x0060, 0x6101, 0x0660, 0x0300, 0x1046, 0x0055, 0x6100, 0x6105, 0x1420, 0x0210, 0x0014, 
	0x2023, 0x6100, 0x6105, 0x1210, 0x1023, 0x1034, 0x2120, 0x2125, 0x0202, 0x0262, 0x0111, 0x0114, 0x0151, 0x0154, 0x6101, 0x0500, 
	0x1115, 0x0431, 0x0360, 0x3110, 0x3114, 0x2143, 0x0301, 0x0151, 0x0263, 0x6101, 0x6005, 0x0400, 0x1115, 0x0331, 0x1155, 0x1034, 
	0x0060, 0x0301, 0x0361, 0x2001, 0x0114, 0x1022, 0x1033, 0x1044, 0x0150, 0x0010, 0x0154, 0x6102, 0x0500, 0x0361, 0x1000, 0x1005, 
	0x6100, 0x6104, 0x0360, 0x4100, 0x4104, 0x0351, 0x1152, 0x6100, 0x6105, 0x0440, 0x0033, 0x1240, 0x1044, 0x1232, 0x1100, 0x1105, 
	0x0121, 0x0124, 0x0151, 0x0154, 0x0160, 0x0165, 0x3132, 0x2100, 0x2104, 0x0331, 0x0361, 0x0600, 0x0660, 0x1100, 0x1105, 0x0124, 
	0x0133, 0x0142, 0x1046, 0x0151, 0x2000, 0x0055, 0x6101, 0x0301, 0x0361, 0x0100, 0x0111, 0x0122, 0x0133, 0x0144, 0x0155, 0x1056, 
	0x6103, 0x0101, 0x0161, 0x0212, 0x0121, 0x0124, 0x0130, 0x0135, 0x0003, 0x0770, 0x1102, 0x0123, 0x2134, 0x0321, 0x0241, 0x0261, 
	0x0150, 0x0165, 0x5101, 0x3035, 0x0331, 0x1145, 0x0160, 0x0163, 0x0000, 0x2130, 0x0321, 0x0361, 0x0134, 0x0154, 0x5104, 0x3031, 
	0x0231, 0x1040, 0x0261, 0x0165, 0x0003, 0x2130, 0x0321, 0x1134, 0x0361, 0x0340, 0x5111, 0x0202, 0x0114, 0x0330, 0x0360, 0x3134, 
	0x0470, 0x3021, 0x0221, 0x0125, 0x1030, 0x0251, 0x6101, 0x3135, 0x0124, 0x0000, 0x0231, 0x0060, 0x4122, 0x0102, 0x0361, 0x0021, 
	0x4124, 0x1150, 0x0371, 0x0104, 0x6101, 0x2034, 0x0125, 0x1055, 0x0000, 0x1025, 0x0241, 0x0060, 0x0165, 0x6102, 0x0361, 0x0001, 
	0x1630, 0x4120, 0x3135, 0x0124, 0x2033, 0x4120, 0x3134, 0x0420, 0x2130, 0x2134, 0x0321, 0x0361, 0x4131, 0x3025, 0x0120, 0x0123, 
	0x1135, 0x0351, 0x0370, 0x4134, 0x3021, 0x0221, 0x0125, 0x1030, 0x0251, 0x0373, 0x3131, 0x1135, 0x0223, 0x0120, 0x0360, 0x1023, 
	0x0421, 0x0460, 0x0341, 0x0130, 0x0154, 0x4112, 0x0421, 0x6003, 0x0055, 0x0163, 0x3120, 0x3124, 0x0261, 0x0165, 0x2120, 0x2124, 
	0x0351, 0x1152, 0x1640, 0x1120, 0x1125, 0x2141, 0x2144, 0x0033, 0x2032, 0x2034, 0x0120, 0x0125, 0x1051, 0x1055, 0x1021, 0x1025, 
	0x0142, 0x0060, 0x0165, 0x4124, 0x2120, 0x0470, 0x0251, 0x0520, 0x0560, 0x1123, 0x0142, 0x0151, 0x1020, 0x0055, 0x4012, 0x0203, 
	0x2043, 0x2003, 0x0130, 0x0263, 0x2103, 0x2143, 0x4013, 0x0200, 0x2042, 0x2002, 0x0233, 0x0160, 0x0201, 0x0213, 0x0105, 0x0110, 
	0x0660, 0x1140, 0x1145, 0x0222, 0x0131, 0x0134, 0x0013
};

const uint16_t wlcd_font_termb_8x8_0_127_CharOffs[129] = {
	0x0000, 0x0000, 0x0008, 0x0010, 0x0015, 0x0019, 0x0020, 0x0025, 0x0027, 0x002f, 0x0037, 0x0041, 0x0048, 0x004e, 0x0054, 0x005a, 
	0x0064, 0x0068, 0x006c, 0x0071, 0x0075, 0x007b, 0x0087, 0x0088, 0x008e, 0x0091, 0x0094, 0x0099, 0x009e, 0x00a0, 0x00a5, 0x00a9, 
	0x00ad, 0x00ad, 0x00b0, 0x00b2, 0x00b6, 0x00bd, 0x00c5, 0x00d2, 0x00d4, 0x00d9, 0x00de, 0x00e4, 0x00e6, 0x00e8, 0x00e9, 0x00ea, 
	0x00f1, 0x00f8, 0x00fb, 0x0103, 0x010b, 0x0112, 0x0118, 0x011f, 0x0124, 0x012d, 0x0133, 0x0135, 0x0138, 0x0140, 0x0142, 0x014a, 
	0x0150, 0x0155, 0x015a, 0x0161, 0x0168, 0x016e, 0x0175, 0x017b, 0x0183, 0x0186, 0x0189, 0x018d, 0x0196, 0x019b, 0x01a1, 0x01a6, 
	0x01ae, 0x01b3, 0x01b9, 0x01c1, 0x01cb, 0x01d0, 0x01d3, 0x01d7, 0x01dd, 0x01e6, 0x01eb, 0x01f6, 0x01f9, 0x0200, 0x0203, 0x0209, 
	0x020a, 0x020c, 0x0212, 0x0219, 0x021e, 0x0225, 0x022a, 0x022f, 0x0236, 0x023c, 0x0240, 0x0244, 0x024d, 0x0250, 0x0255, 0x0258, 
	0x025c, 0x0263, 0x026a, 0x0270, 0x0275, 0x027a, 0x027e, 0x0282, 0x0288, 0x0293, 0x0297, 0x029e, 0x02a4, 0x02a6, 0x02ac, 0x02b0, 
	0x02b7 //last item is not offset to real char, but is here just to be able to count how many rectangles we use for last char
};

#endif
